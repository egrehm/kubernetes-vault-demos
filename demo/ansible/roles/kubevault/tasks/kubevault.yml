# https://github.com/kubevault/docs/blob/master/docs/setup/operator/install.md

# using helm

- name: 'Helm - install etcd '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    helm upgrade --install etcd-{{ item.name }} --namespace={{ item.namespace }} incubator/etcd --set "image.tag={{ item.etcd_version }}"
  with_items: "{{ kubevault }}"
  delegate_to: localhost

- debug: msg='Wait for etcd to be ready (2min max)'

#kubectl get po -n vault | grep etcd-kubevault-0 | grep  -v Running || echo 
- name: 'Wait for etcd to be ready (2min max)'
  shell: kubectl get po -n vault | grep etcd-kubevault-0 | grep  -v Running || echo 
  #ignore_errors: true
  register: etcd_running
  until:  etcd_running.stdout == ""
  retries: 60
  delay: 2
  delegate_to: localhost

#- name: sleep for etcd (needs check)
#  wait_for: timeout=150
#  delegate_to: localhost
#
#

- name: 'Helm - add appcode repo '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    helm repo list | grep appscode || helm repo add appscode https://charts.appscode.com/stable/
    helm repo update
  delegate_to: localhost


- name: 'Helm - install kubevault operator '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    helm upgrade --install {{ item.name }}-{{ helmdomain }} --namespace={{ item.namespace }} appscode/vault-operator
  with_items: "{{ kubevault }}"
  delegate_to: localhost

# not rdy! impl wait
- name: 'kubectl - kubevault wait for CRDs '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    kubectl get crds -l app=vault 
  delegate_to: localhost

- debug: msg="sleep for vault crd (needs check)"

- name: sleep for vault crd (needs check)
  wait_for: timeout=30
  delegate_to: localhost

- name: 'Helm - install kubevault catalog '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    helm upgrade --install {{ item.name }}-catalog-{{ helmdomain }} --namespace={{ item.namespace }} appscode/vault-catalog
  with_items: "{{ kubevault }}"
  delegate_to: localhost



#  Version needs to be autodetected
- name: 'kubectl - create Vaultserver '
  shell: |
    export KUBECONFIG=/{{ kubeconfigfile }}
    kubectl apply -f role/kubevault/files/VaultServer_existingetcd.yaml 
  delegate_to: localhost
